{"version":3,"sources":["lib/redux/reducers/auth.js","lib/redux/reducers/pagination.js","lib/redux/reducers/users.js","lib/redux/reducers/snackbar.js","lib/redux/reducers/index.js","lib/redux/action-types.js","lib/redux/store.js","lib/dataProvider.js","lib/redux/actions.js","components/UserDetail.jsx","components/Topbar.jsx","components/Content.jsx","components/Login.jsx","components/SnackbarBottom.jsx","App.jsx","serviceWorker.js","index.js"],"names":["initialStore","user","page","userData","userInfo","status","message","combineReducers","auth","store","arguments","length","undefined","action","type","Object","objectSpread","pagination","cty","users","setToNull","snackbar","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","DataProvider","classCallCheck","this","service","axios","create","baseURL","get","concat","then","response","data","catch","error","id","post","name","job","patch","dismissUser","showSnackbar","UserDetail","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","edit","e","preventDefault","_this2","_e$currentTarget$elem","currentTarget","elements","edituser","value","editUserData","timestamp","Date","updatedAt","now","getHours","getMinutes","toggleEdit","setState","_this3","_this$props$userInfo","email","first_name","last_name","avatar","react_default","a","createElement","className","index_es","variant","src","alt","onSubmit","editUser","htmlFor","required","color","primary","secondary","onClick","closeUserInfo","Component","mapDispatchToProps","connect","Topbar","_this$props$user","picture","position","url","Content","rightDrawer","listUsers","prevProps","button","prevPage","nextPage","getUser","newUser","newUserData","toggleDrawer","createdAt","shown","_this$props","Fragment","components_Topbar","component","map","key","showUserInfo","Add_default","changePage","classNames","hide-button","total_pages","aria-label","anchor","open","onClose","align","createUser","Close_default","components_UserDetail","react_router","to","dispatch","Login","login","history","push","Paper_default","Typography_default","facebook_login_with_button_default","appId","process","autoLoad","fields","callback","responseFacebook","withRouter","SnackbarBottom","hideSnackbar","anchorOrigin","horizontal","vertical","autoHideDuration","size","App","exact","path","components_SnackbarBottom","Boolean","window","location","hostname","match","ReactDOM","render","es","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d128b26.chunk.js","sourcesContent":["import {LOGIN} from '../action-types'\n\nconst initialStore = {\n  user: null,\n}\n\nexport const auth = (store = initialStore, action) => {\n  switch(action.type){\n      case LOGIN:\n      return{\n        ...store,\n        user: action.userInfo\n      }\n     default:\n       return store;\n  }\n}","import {NEXT_PAGE, PREV_PAGE} from '../action-types'\n\nconst initialStore = {\n  page: 1,\n}\n\nexport const pagination = (store = initialStore, action) => {\n  switch(action.type){\n    case NEXT_PAGE:\n       return {\n         ...store,\n         page: store.page + action.cty\n       }\n     case PREV_PAGE:\n       return {\n        ...store,\n        page: store.page + action.cty\n      }\n     default:\n       return store;\n  }\n}","import {GET_USER, DISMISS_USER, LIST_USERS} from '../action-types'\n\nconst initialStore = {\n  userData: {},\n  userInfo: false\n}\n\nexport const users = (store = initialStore, action) => {\n  switch(action.type){\n      case LIST_USERS:\n      return{\n        ...store,\n        userData: action.userData\n      }\n      case GET_USER:\n      return{\n        ...store,\n        userInfo: action.userInfo\n      }\n      case DISMISS_USER:\n      return{\n        ...store,\n        userInfo: action.setToNull\n      }\n     default:\n       return store;\n  }\n}","import { SHOW_SNACKBAR, HIDE_SNACKBAR } from '../action-types'\n\nconst initialStore = {\n    status: false,\n    message: \"\"\n}\n\nexport const snackbar = (store = initialStore, action) => {\n  switch(action.type){\n    case SHOW_SNACKBAR:\n      return{\n        ...store, \n        status: true,\n        message: action.message\n      }\n    case HIDE_SNACKBAR:\n      return{\n        ...store,\n        status: false,\n        message: \"\"\n      }\n    default:\n      return store\n  }\n}","import { combineReducers } from 'redux'\nimport {auth} from './auth'\nimport {pagination} from './pagination'\nimport {users} from './users'\nimport {snackbar} from './snackbar'\n\nexport default combineReducers({\n  auth,\n  pagination,\n  users,\n  snackbar\n})","export const NEXT_PAGE = \"NEXT_PAGE\"\nexport const PREV_PAGE = \"PREV_PAGE\"\nexport const LOGIN = \"LOGIN\"\nexport const DISMISS_USER = \"DISMISS_USER\"\nexport const LIST_USERS = \"LIST_USERS\"\nexport const GET_USER = \"GET_USER\"\nexport const SHOW_SNACKBAR = \"SHOW_SNACKBAR\"\nexport const HIDE_SNACKBAR = \"HIDE_SNACKBAR\"","import { createStore, applyMiddleware } from 'redux'\n//import { rootReducer } from './reducer.js';\nimport reducer from './reducers'\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const store = createStore(reducer, composeWithDevTools(\n    applyMiddleware(thunk)\n      ))","import axios from 'axios'\n\nclass DataProvider{\n  constructor(){\n    this.service = axios.create({\n      baseURL: \"https://reqres.in/api/\"\n    })\n  }\n\n  listUsers(page){\n    return this.service.get(`users?page=${page}&per_page=5`)\n    .then(response => response.data)\n    .catch(error=>error)\n  }\n\n  getUser(id){\n    return this.service.get(`users/${id}`)\n    .then(response => response.data)\n    .catch(error=>error)\n  }\n\n  newUser(user){\n    return this.service.post(\"users\", user)\n    .then(response => response)\n    .catch(error=>error)\n  }\n\n  edituser(user){\n    const {id, name, job} = user\n    return this.service.patch(`users/${id}`, {name, job})\n    .then(response => response)\n    .catch(error=>error)\n  }\n}\n\nexport default DataProvider","import DataProvider from \"../dataProvider\"\nimport {NEXT_PAGE, PREV_PAGE, LOGIN, \n  DISMISS_USER, LIST_USERS, GET_USER, SHOW_SNACKBAR, HIDE_SNACKBAR} from './action-types'\n\nconst data = new DataProvider()\n\nexport const nextPage = () => {\n  return {\n    type: NEXT_PAGE,\n    cty: 1\n  }\n}\n\nexport const prevPage = () => {\n  return {\n    type: PREV_PAGE, \n    cty: -1\n  }\n}\n\nexport const login = userInfo =>{\n  return {\n    type: LOGIN,\n    userInfo\n  }\n}\n\nexport const dismissUser = () =>{\n  return {\n    type: DISMISS_USER,\n    setToNull: null\n  }\n}\n\nexport const listUsers = page =>{\n  return dispatch => {\n    return data.listUsers(page)\n    .then(userData => dispatch({type:LIST_USERS, userData}))\n  }\n}\n\nexport const getUser = page =>{\n  return dispatch => {\n    return data.getUser(page)\n    .then(userInfo => dispatch({type:GET_USER, userInfo: userInfo.data}))\n  }\n}\n\nexport const showSnackbar = message => {\n  return{\n    type: SHOW_SNACKBAR,\n    message: message\n  }\n}\n\nexport const hideSnackbar = () =>{\n  return{\n    type: HIDE_SNACKBAR\n  }\n}\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux';\nimport {dismissUser, showSnackbar} from \"../lib/redux/actions\"\nimport DataProvider from \"../lib/dataProvider\"\nimport PropTypes from 'prop-types';\n\nimport { Button, Typography, List, ListItem, ListItemText, FormControl, InputLabel, Input } from '@material-ui/core';\n\n\nclass UserDetail extends Component {\n  constructor(props){\n    super(props)\n    this.data = new DataProvider()\n    this.state={\n      edit: false,\n    }\n  }\n\n  closeUserInfo(e){\n    e.preventDefault()\n    this.props.dismissUser()\n  }\n\n  editUser(e){\n    e.preventDefault()\n    const {name, job} = e.currentTarget.elements\n    this.data.edituser({\n      id: this.props.userInfo.id,\n      name: name.value,\n      job: job.value\n    }).then(editUserData => {\n      if(editUserData.status === 200){\n        const timestamp = new Date(editUserData.data.updatedAt)\n        const now = `${timestamp.getHours()}:${(timestamp.getMinutes()<10?'0':'')}${timestamp.getMinutes()}`\n        this.props.showSnackbar(`User updated at ${now}`)\n      }else{\n        this.props.showSnackbar(`Something wrong has happened. Status: ${editUserData.status}`)\n      }\n    })\n    name.value= \"\"\n    job.value= \"\"\n    this.toggleEdit()\n  }\n\n  toggleEdit(){\n    this.setState({\n      ...this.state,\n      edit: !this.state.edit\n    })\n  }\n\n  render() {\n    const { email, first_name, last_name, avatar } = this.props.userInfo\n    return (\n      <div className=\"user-detail\">\n        <Typography variant=\"h5\">User info</Typography>\n        <img src={avatar} alt={first_name}/>\n        {this.state.edit?\n          <form onSubmit={e => this.editUser(e)}>\n            <FormControl className=\"form-control\">\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\n              <Input\n                required={true}\n                type=\"text\"\n                id=\"name\"/>\n            </FormControl>\n            <FormControl className=\"form-control\">\n          <InputLabel htmlFor=\"job\">Job</InputLabel>\n          <Input \n            required={true}\n            type=\"text\"\n            id=\"job\"\n            />\n        </FormControl>\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          className=\"update-button\">\n          Update User\n        </Button>\n          </form>\n          :<List>\n          <ListItem><ListItemText primary=\"Email:\" secondary={email}/> </ListItem>\n          <ListItem><ListItemText primary=\"First name:\" secondary={first_name}/></ListItem>\n          <ListItem><ListItemText primary=\"Last name:\" secondary={last_name}/></ListItem>\n        </List>}\n        \n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={e=> this.toggleEdit()}\n          >{this.state.edit?\"Cancel\":\"Edit\"}</Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={e => this.closeUserInfo(e)}\n          className=\"close-button\"\n          >Close</Button>\n      </div>\n    )\n  }\n}\n\nUserDetail.propTypes = {\n  userInfo: PropTypes.shape({\n    email: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    avatar: PropTypes.string\n  }),\n  dismissUser: PropTypes.func ,\n  showSnackbar: PropTypes.func \n}\n\nconst mapStateToProps = state => {\n  const { users } = state\n  return { userInfo: users.userInfo };\n};\n\nconst mapDispatchToProps = {\n  dismissUser,\n  showSnackbar\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetail)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\nimport { AppBar, Toolbar, Typography, Avatar } from '@material-ui/core';\n\nclass Topbar extends Component {\n  render() {\n    const {name, picture} = this.props.user\n    return (\n      <AppBar position=\"static\" className=\"Topbar\">\n        <Toolbar className=\"top-bar\">\n          <Typography variant=\"h6\" className=\"title\">React Test</Typography>\n          <div className=\"user-info\">\n            <Typography variant=\"body1\" className=\"welcome\">Welcome, {name}</Typography>\n            <Avatar alt={name} src={picture.data.url} className=\"avatar\" />\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nTopbar.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    picture: PropTypes.object\n  })\n}\n\nconst mapStateToProps = state => {\n  const { auth } = state\n  return {\n    user: auth.user\n  }\n};\n\nexport default connect(mapStateToProps)(Topbar)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { nextPage, prevPage, listUsers, getUser, dismissUser, showSnackbar } from \"../lib/redux/actions\"\nimport { Redirect } from 'react-router-dom'\nimport UserDetail from './UserDetail';\nimport Topbar from './Topbar';\nimport DataProvider from \"../lib/dataProvider\"\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types';\n\n\nimport {\n  Typography, Drawer, FormControl, InputLabel,\n  Input, Button, Paper, Table, TableHead, TableRow,\n  TableCell, TableBody, Modal, Fab\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nclass Content extends Component {\n  constructor(props) {\n    super(props)\n    this.data = new DataProvider()\n    this.state = {\n      rightDrawer: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.listUsers(this.props.page)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.page !== prevProps.page) this.props.listUsers(this.props.page)\n  }\n\n  changePage(button) {\n    switch (button) {\n      case \"prev\":\n        this.props.prevPage()\n        break\n      case \"next\":\n        this.props.nextPage()\n        break\n      default:\n        break\n    }\n  }\n\n  showUserInfo(e, id) {\n    e.preventDefault()\n    this.props.getUser(id)\n  }\n\n  createUser(e) {\n    e.preventDefault()\n    const { name, job } = e.currentTarget.elements\n    this.data.newUser({\n      name: name.value,\n      job: job.value\n    }).then(newUserData => {\n      this.toggleDrawer(false)\n      if (newUserData.status === 201) {\n        const timestamp = new Date(newUserData.data.createdAt)\n        const now = `${timestamp.getHours()}:${(timestamp.getMinutes() < 10 ? '0' : '')}${timestamp.getMinutes()}`\n        this.props.showSnackbar(`User created at ${now} with id ${newUserData.data.id}`)\n      } else {\n        this.props.showSnackbar(`Something wrong has happened. Status: ${newUserData.status}`)\n      }\n    })\n    name.value = \"\"\n    job.value = \"\"\n  }\n\n  toggleDrawer(shown) {\n    this.setState({\n      ...this.state,\n      rightDrawer: shown\n    })\n  }\n\n  render() {\n\n    const { user, userData, userInfo} = this.props\n\n    if (!user) return <Redirect to='/' />\n    return (\n      <React.Fragment>\n       <Topbar />\n        <div className=\"Content\">\n          {userData.data ?\n            <div className=\"table-container\">\n              <Typography component=\"h1\" variant=\"h4\" className=\"title\">Users list</Typography>\n              <Paper className=\"paper\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className=\"row-title\">First Name</TableCell>\n                      <TableCell className=\"row-title\">Second Name</TableCell>\n                      <TableCell className=\"row-title\">More Info</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {userData.data.map(user => {\n                      return <TableRow key={user.id}>\n                        <TableCell>{user.first_name}</TableCell>\n                        <TableCell>{user.last_name}</TableCell>\n                        <TableCell><Button \n                          onClick={e => this.showUserInfo(e, user.id)}\n                          color=\"primary\"><AddIcon />Info</Button></TableCell>\n                      </TableRow>\n                    })}\n                  </TableBody>\n                </Table>\n              </Paper>\n                <div className=\"table-pagination\">\n                <Button \n                  variant=\"outlined\" color=\"primary\"\n                  onClick={() => this.changePage(\"prev\")}\n                  className = {classNames({\"hide-button\": userData.page === 1})}\n                  >Prev</Button> \n                <Typography variant=\"caption\">Page {userData.page} of {userData.total_pages}</Typography>\n                <Button \n                  variant=\"outlined\" color=\"primary\"\n                  onClick={() => this.changePage(\"next\")}\n                  className = {classNames({\"hide-button\": userData.page === userData.total_pages})}\n                  >Next</Button>\n                </div>\n\n              <Fab\n                variant=\"extended\"\n                color=\"primary\"\n                aria-label=\"Add\"\n                className=\"new-user-button\"\n                onClick={() => this.toggleDrawer(true)}>\n                <AddIcon />\n                New User\n              </Fab>\n              <Drawer\n                className=\"drawer\"\n                anchor=\"right\"\n                open={this.state.rightDrawer}\n                onClose={() => this.toggleDrawer(false)}>\n                <div className=\"new-user-container\">\n                  <Paper className=\"form-container\">\n                  <Typography component=\"h2\" variant=\"h6\" align=\"center\">Create new user</Typography>\n                  <form\n                    className=\"new-user-form\"\n                    onSubmit={e => this.createUser(e)}>\n                    <FormControl className=\"form-control\">\n                      <InputLabel htmlFor=\"name\">Name</InputLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"name\"\n                      />\n                    </FormControl>\n                    <FormControl className=\"form-control\">\n                      <InputLabel htmlFor=\"job\">Job</InputLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"job\"\n                      />\n                    </FormControl>\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      variant=\"contained\">\n                      Create User\n                     </Button>\n                  </form>\n                  </Paper>\n                  <Fab\n                    color=\"secondary\"\n                    className=\"close-button\"\n                    onClick={() => this.toggleDrawer(false)}>\n                    <CloseIcon />\n                  </Fab>\n                </div>\n              </Drawer>\n            </div>\n            : <p>Loading...</p>}\n          <Modal\n            open={!!userInfo}\n            onClose={() => this.props.dismissUser()}\n            className=\"modal-overlay\">\n            <Paper className=\"modal-box\">\n              {userInfo ? <UserDetail /> : null}\n            </Paper>\n          </Modal>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nContent.propTypes = {\n  user: PropTypes.object,\n  page: PropTypes.number,\n  userData: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number,\n      first_name: PropTypes.string,\n      last_name: PropTypes.string\n    })),\n    page: PropTypes.number,\n    total_pages: PropTypes.number\n  }),\n  userInfo: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.object\n  ]),\n  nextPage: PropTypes.func,\n  prevPage: PropTypes.func,\n  listUsers: PropTypes.func,\n  getUser: PropTypes.func,\n  dismissUser: PropTypes.func,\n  showSnackbar: PropTypes.func \n}\n\nconst mapDispatchToProps = {\n  nextPage,\n  prevPage,\n  listUsers,\n  getUser,\n  dismissUser,\n  showSnackbar\n}\n\nconst mapStateToProps = state => {\n  const { auth, pagination, users } = state\n  return {\n    user: auth.user,\n    page: pagination.page,\n    userData: users.userData,\n    userInfo: users.userInfo\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content)\n","import React, { Component } from 'react'\nimport FacebookLogin from 'react-facebook-login';\nimport {connect} from 'react-redux';\nimport {login} from \"../lib/redux/actions\"\nimport { withRouter} from \"react-router-dom\"\nimport PropTypes from 'prop-types';\n\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass Login extends Component {\n\nasync responseFacebook(response){\n    this.props.login(response)\n    this.props.history.push(\"/content\")\n  }\n\n  render() {\n    return (\n      <div className=\"Login\">\n      <Paper className=\"login-box\">\n      <Typography component=\"h1\" variant=\"h4\" className=\"login-title\">React test</Typography>\n        <Typography variant=\"body1\" className=\"login-subtitle\">Please log in to continue</Typography>\n        <FacebookLogin\n          appId={process.env.REACT_APP_FB_KEY}\n          autoLoad={false}\n          fields=\"name,email,picture\"\n          callback={(response)=>this.responseFacebook(response)} />\n          </Paper>\n      </div>\n\n\n    )\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func\n}\n\nconst mapDispatchToProps = {\n  login\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login))\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {hideSnackbar} from '../lib/redux/actions'\nimport PropTypes from 'prop-types';\n\nimport { Snackbar, Button } from '@material-ui/core';\n\nclass SnackbarBottom extends Component {\n\n  render() {\n    const {status, message, hideSnackbar} = this.props\n    return (\n      <Snackbar \n            anchorOrigin={{\n              horizontal: \"center\",\n              vertical: \"bottom\"}}\n            autoHideDuration={10000}\n            open= {status}\n            onClose= {()=>hideSnackbar()}\n            message={message}\n            action={[\n              <Button\n              color=\"secondary\"\n              size=\"small\"\n              key=\"undo\"\n              onClick={()=>hideSnackbar()}\n              >Close\n              </Button>\n            ]}\n              />\n    )\n  }\n}\n\nSnackbarBottom.propTypes = {\n  status: PropTypes.bool,\n  message: PropTypes.string,\n  hideSnackbar: PropTypes.func\n}\n\nconst mapStateToProps = state => {\n  const { snackbar } = state\n  return { \n    status: snackbar.status,\n    message:snackbar.message };\n};\n\nconst mapDispatchToProps = {hideSnackbar}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SnackbarBottom)\n","import React from 'react';\nimport './styles/main.scss'\nimport Content from './components/Content';\nimport Login from './components/Login';\nimport { Switch, Route } from 'react-router-dom';\nimport SnackbarBottom from './components/SnackbarBottom';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Login}/>\n        <Route exact path=\"/content\" component={Content}/>\n      </Switch>\n      <SnackbarBottom/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './styles/main.scss'\n\nimport { Provider } from 'react-redux'\nimport {store} from './lib/redux/store'\n\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<Provider store={store}>\n  <Router>\n    <App />\n  </Router>\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}